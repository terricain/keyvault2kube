name: CI

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  test:
    # Combining linting into testing to save recreating workspace
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Install Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Install Poetry
        run: |
          pip install poetry
      - name: Install dev dependencies
        run: poetry install
      - name: Run Black
        run: poetry run black --check keyvault2kube
      - name: Run isort
        run: poetry run isort -c
      - name: Validated Kuberentes deployment
        uses: instrumenta/kubeval-action@master
        with:
          files: deployment.yaml
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Auth with GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Container
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/terrycain/keyvault2kube:${{ steps.get_version.outputs.version }}
            ghcr.io/terrycain/keyvault2kube:latest
